FROM alpine:3.18 AS python_builder

## PYTHON DEPS

WORKDIR /home/app/build

ENV SHELL bash
ENV PYTHONUNBUFFERED=1

RUN apk add git build-base curl python3 py3-pip 
RUN ln -sf python3 /usr/bin/python

RUN echo "*** install tidal-dl ***"
RUN python3 -m pip install --no-cache --upgrade pip wheel setuptools chardet tidal-dl

RUN echo "*** install beets ***"
RUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/community/x86_64/ beets

## BUILD APP

FROM alpine:3.18 AS  app_builder 
WORKDIR /home/app/build

ENV SHELL bash
ARG NODE_ENV
ENV NODE_ENV="${NODE_ENV}"

RUN apk add git npm nodejs

COPY . .

RUN npm install -g yarn
RUN \
      --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
      yarn --prefer-offline --frozen-lockfile

RUN yarn front-build
RUN yarn api-build

## BUILD STANDALONE APP

FROM mcr.microsoft.com/playwright:v1.43.1-jammy AS runner

WORKDIR /home/app/standalone

COPY --from=python_builder /usr/bin/tidal-dl /usr/bin/tidal-dl
COPY --from=python_builder /usr/bin/beet /usr/bin/beet

RUN mkdir -p /home/app/standalone/shared/beets
RUN touch /home/app/standalone/shared/beets/beets-library.blb

COPY --from=app_builder /home/app/build/api/dist /home/app/standalone/api/dist
COPY --from=app_builder /home/app/build/build /home/app/standalone/build
COPY --from=app_builder /home/app/build/public /home/app/standalone/public
COPY --from=app_builder /home/app/build/settings /home/app/standalone/settings

COPY package.json .
COPY yarn.lock .
COPY .env .

RUN npm install -g yarn
RUN npm install serve concurrently

# testing stuff

COPY --from=app_builder /home/app/build/E2E /home/app/standalone/E2E
# COPY --from=app_builder /home/app/build/* /home/app/standalone/

# RUN \
#       --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
#       yarn --prefer-offline --frozen-lockfile

# RUN npx playwright install --with-deps chromium

WORKDIR /home/app/standalone

EXPOSE 8484
EXPOSE 8585

ENTRYPOINT ["yarn", "prod"]

